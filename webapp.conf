server {
    listen         80;
    server_name    $hostname;
    return         301 https://$host$request_uri;
}

server {
    listen 443;
    server_name $hostname;
    root /home/app/webapp/public;
    passenger_app_root /home/app/webapp;

    server_tokens off;
    more_clear_headers Server;
    more_clear_headers X-Powered-By;

		
	add_header        X-Forwarded-Proto https always;
	proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header  X-Forwarded-Proto $scheme;
	proxy_set_header  Host $host;
	proxy_set_header  X-Forwarded-Host $host;
	proxy_set_header  X-Frame-Options   'SAMEORIGIN';
    proxy_set_header  Strict-Transport-Security   "max-age=15768000";


    # The following deploys your Ruby/Python/Node.js/Meteor app on Passenger.

    # Not familiar with Passenger, and used (G)Unicorn/Thin/Puma/pure Node before?
    # Yes, this is all you need to deploy on Passenger! All the reverse proxying,
    # socket setup, process management, etc are all taken care automatically for
    # you! Learn more at https://www.phusionpassenger.com/.
    passenger_enabled on;
    passenger_user app;
    #passenger_pass_header X-Accel-Redirect;

    # If this is a Ruby app, specify a Ruby version:
    passenger_ruby /usr/bin/ruby2.6;
    # For Ruby 2.0
    # passenger_ruby /usr/bin/ruby2.0;
    # For Ruby 1.9.3 (you can ignore the "1.9.1" suffix)
    #passenger_ruby /usr/bin/ruby1.9.1;

    ssl    on;
    ssl_certificate /etc/pki/tls/certs/mycert.crt;
    ssl_certificate_key /etc/pki/tls/private/mycert.key;

    ssl_trusted_certificate /usr/local/share/ca-certificates/GeoTrust_Universal_CA.pem;

    ssl_protocols TLSv1.2;
    # ssl_ciphers '';
    ssl_prefer_server_ciphers on;

    ssl_dhparam /usr/local/share/ca-certificates/dhparam.pem;
}
